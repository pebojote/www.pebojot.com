<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="http://localhost:3000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:3000/" rel="alternate" type="text/html" /><updated>2022-05-30T18:18:47+08:00</updated><id>http://localhost:3000/feed.xml</id><entry><title type="html">Major Hike at Mt. Pigingan 2022. ðŸŒ„ðŸš©</title><link href="http://localhost:3000/2022/05/30/blog/" rel="alternate" type="text/html" title="Major Hike at Mt. Pigingan 2022. ðŸŒ„ðŸš©" /><published>2022-05-30T00:00:00+08:00</published><updated>2022-05-30T00:00:00+08:00</updated><id>http://localhost:3000/2022/05/30/blog</id><content type="html" xml:base="http://localhost:3000/2022/05/30/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2022.5.30.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Major Hike at Mt. Pigingan. ðŸŒ„ðŸš©&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Major Hike at Mt. Pigingan. ðŸŒ„ðŸš©&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
        &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
    &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        30 May 2022
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
 &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            05/30/2022
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif&quot;&gt;
    &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;col-12 mx-auto d-block&quot;&gt;
            &lt;img src=&quot;/assets/images/2022.5.30.blog/1.png&quot; class=&quot;img-fluid&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;img src=&quot;/assets/images/2022.5.30.blog/2.png&quot; class=&quot;img-fluid&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
  &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/05/30/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/05/30/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">So, I&apos;m going to tell you about my hike up Mt. Pigingan. So this year, I&apos;ve decided to travel twice a month, mostly hiking in different mountains in the Philippines. Later, I&apos;d like to write a blog post about my professional experience also.</summary></entry><entry><title type="html">Using Distributed algorithms to System architecture</title><link href="http://localhost:3000/2021/09/11/blog/" rel="alternate" type="text/html" title="Using Distributed algorithms to System architecture" /><published>2021-09-11T00:00:00+08:00</published><updated>2021-09-11T00:00:00+08:00</updated><id>http://localhost:3000/2021/09/11/blog</id><content type="html" xml:base="http://localhost:3000/2021/09/11/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.9.11.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size &quot; style=&quot;text-align: center;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;Using Distributed algorithms to System architecture&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size &quot; style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;Using Distributed algorithms to System architecture&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size &quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
          &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        11 September 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            09/11/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;In my earlier article, I discussed the abstraction layer, specifically interoperability. We know that an interoperable object can communicate with other system components. Today, however, I&apos;m going to talk to you about distributed algorithms and system architecture. Isn&apos;t it true that computers run algorithms? We give the computer the problem, and it uses an algorithm in a silicon-based processor to solve it.&lt;/p&gt;
    &lt;p&gt;But what if the problem is given by the computers? What are our options for resolving the issue? What about the executable code? Where do we get it? Computers, of course, can present us with a problem, which we can then solve using an algorithm (thinking) in our heads. The human brain, like the computer, has a silicon-based processor. A distributed algorithm (or distributed thinking) is when the brain of a human and the silicon-based processor of a computer work together to produce an overall result.&lt;/p&gt;
    &lt;p&gt;Distributed thinking is possible because it can take advantage of multiple people&apos;s ideas running in parallel. It runs in parallel because different people can collaborate to achieve a common goal. Human-based computation is the term for this. The computer distributes a small unit of work to many people in human-based computation (or HBC), which is also known as microwork, to produce an overall result. If no efficient algorithm has yet been created in the computer for microwork, the computer can use the thinking of different people.&lt;/p&gt;
    &lt;p&gt;A computer can divide a large piece of work into small units and distribute them across the internet to a large number of people. Microwork is used in Amazon Mechanical Turk (AMT), InnoCentive, and Internet Eyes, among other places. In AMT, it can distribute random work. I&apos;m not going to discuss those jobs because they&apos;re completely random. InnoCentive, on the other hand, allows a company to ask you a specific question to solve a problem, and if you answer it correctly, they will pay you $50. In Internet Eyes, you can watch CCTV cameras and alert shop owners if there is a potential theft, and they will pay you for it.&lt;/p&gt;
    &lt;p&gt;However, a computer that assigns a small unit of work to various people is limited because it can slow down the work if a specific person&apos;s thinking is inefficient, resulting in a poor overall result. We must extend it in order to avoid it. Rather than assigning work solely to humans, we can assign it to both humans and computers. It means that a computer can assign tasks to both humans and machines (CH or CC). This relationship of HC, CH, HH, CC, and other components can form a system, and we must understand it. And by using a language, we can comprehend their relationship.&lt;/p&gt;
    &lt;p&gt;This is where the system architecture enters the picture. System architecture entails developing an architecture description language (ADL) to describe the relationships between components so that people (developers and stakeholders) can comprehend the system we&apos;re building. There are many different types of ADL, but we will use the United Modelling Language (or UML), which is the best. The structure diagram and the behavior diagram are two diagrams used in UML to understand the relationship between components in a system.&lt;/p&gt;
    &lt;p&gt;For example, we can show the developers the structure diagrams (used to create a technical architecture) to help them understand our system, because technical architecture focuses more on the structure of the software/system. Another is we can show the stakeholder the behavior diagram (used to create an application architecture), because application architecture focuses more on the behavior (or functionality) of the software/system. Remember that stakeholders value functionality over structure, because no matter how well-structured your software is, if the functionality fails to meet their needs, it is effectively useless to them. There are open-source tools available to assist you in creating this diagram using UML tools.&lt;/p&gt;
    &lt;p&gt;We now talked about technical and application architecture. When discussing technical architecture, always remember to consider non-functional requirements. When discussing application architecture, always keep functional requirements in mind. Now I&apos;d like to talk about functional requirements for a moment. The subject of functional requirements is the functionality of software/system. The implementation of functionality can vary depending on the goal of your stakeholder. So I&apos;m not going to go into any more detail.&lt;/p&gt;
    &lt;p&gt;Let us now discuss non-functional requirements. Non-functional requirements concern the structure. Consider the differences between monolithic architecture and microservice structure/architecture. If you&apos;re new to system architecture, monolithic architecture is a good place to start because it&apos;s easier to build but more difficult to manage.&lt;/p&gt;
    &lt;p&gt;In monolithic architecture, all of your components have strong coupling, which means that if you change one, it will have a significant impact on another, potentially causing an imbalance in their relationship. To put it another way, if you change one component, you&apos;ll have to change all of the others to rebalance their relationship. Consider a game of jenga. When one piece at the bottom is removed, it has an impact on all of the pieces above it. Consider what would happen if you removed that one piece at the bottom by accident. Naturally, all of the pieces above it will fall. That minor blunder could turn into a major blunder. As a result, a microservice architecture is required.&lt;/p&gt;
    &lt;p&gt;You can avoid that small mistake that can turn into a big mistake with microservice architecture. Microservice architecture, on the other hand, is difficult to build but easy to manage, whereas monolithic architecture is easier to build but difficult to manage. All of your components in a microservice architecture have weak coupling, which means that if you change one, it will only have a minor impact on the others.&lt;/p&gt;
    &lt;p&gt;Meaning, if you change one component, it will affect some but not all of the others. This component (or service) is also small (or micro) and manageable. Making an orchestration, on the other hand, is context-dependent. In orchestration, however, design patterns are common. Because we all use the same design patterns. The pattern of relationships and interactions among components in orchestration is common.&lt;/p&gt;
    &lt;p&gt;However, non-functional requirements may cause each component to differ from the others. Is it necessary for one component to be durable while the other requires flexibility? These non-functional requirements can be used to describe the component&apos;s purpose. Information architecture includes describing components, which we will discuss next in my blog.&lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;The subject of functional requirements is the functionality of software/system. The implementation of functionality can vary depending on the goal of your stakeholder. Non-functional requirements concern the software/structure. Consider the differences between monolithic architecture and microservice architecture. Microservice architecture is difficult to build but easy to manage. &lt;/p&gt;
    &lt;p&gt;All of your components in a microservice architecture have weak coupling, which means that if you change one, it will only have a minor impact on the others. This component (or service) is also small (or micro) and manageable. However, non-functional requirements may cause each component to differ from the others. Is it necessary for one component to be durable while the other requires flexibility? These non-functional requirements can be used to describe the component&apos;s purpose&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;desktop__size &quot;&gt;
  &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/09/11/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &amp;nbsp;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/09/11/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">In my earlier article, I discussed the abstraction layer, specifically interoperability. We know that an interoperable object can communicate with other system components. Today, however, I&apos;m going to talk to you about distributed algorithms and system architecture.</summary></entry><entry><title type="html">Is it possible to use an algorithm in a system (or humans)?</title><link href="http://localhost:3000/2021/09/01/blog/" rel="alternate" type="text/html" title="Is it possible to use an algorithm in a system (or humans)?" /><published>2021-09-01T00:00:00+08:00</published><updated>2021-09-01T00:00:00+08:00</updated><id>http://localhost:3000/2021/09/01/blog</id><content type="html" xml:base="http://localhost:3000/2021/09/01/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.9.1.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size &quot; style=&quot;text-align: center;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;Is it possible to use an algorithm in a system (or humans)?&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size &quot; style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;Is it possible to use an algorithm in a system (or humans)?&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size &quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
          &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        01 September 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            09/01/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;
        An emotional attachment to a piece of software is a natural part of the human and computer systems. That&apos;s right, their operating systems are in sync. If there are no water purification facilities, raw water collection points, or drainage basins in a water supply system, there will be no water storage, such as water towers. I&apos;m not going to go over every component of the water supply system. I&apos;m simply stating that some components of the water supply system are dependent on others.
    &lt;/p&gt;
    &lt;p&gt;
        If you live in a city, you can easily imagine this scenario. This has something to do with the abstraction layer. Between water towers and raw water collection points known as water purification facilities, there is an abstraction layer in a water supply system. Of course, we don&apos;t want to drink water that hasn&apos;t been purified yet. Anyway, I&apos;m not going to get into hydrologic science right now. But all I&apos;m saying is that between the two parts of the system, there&apos;s an abstraction layer that allows them to communicate.
    &lt;/p&gt;
    &lt;p&gt;
        Interoperability is the term for this. The abstraction layer is also interoperable because it can communicate with both of these components of the system. It means that the abstraction layer is easily understood by those two parts of the system. As a result, the abstraction layer can bring disparate parts together, and that is the only way to refer to something as a system. In addition, the abstraction layer can be used to make different systems work together. Syntactic interoperability is the term for this. Always keep in mind that there are different workers (organization) for each component. This abstraction layer also enables different organizations to collaborate with one another for mutual benefit. Cross-domain interoperability is the term for this.
    &lt;/p&gt;
    &lt;p&gt;
        Cross-domain interoperability is important because it can have a negative impact on both organizations if they can&apos;t work together. There is, of course, a problem if you are designing a water supply system and do not allow the fire department to use fire hydrants in your pipe network. This is self-evident and requires no further explanation. However, in terms of the software industry, the water supply system is a close standard organization, while the fire department has an open standard. The open standard is both syntactic and cross-domain interoperable in this case, whereas the closed standard is only syntactic interoperable.
    &lt;/p&gt;
    &lt;p&gt;
        It&apos;s possible that the organization&apos;s close standard was established because there wasn&apos;t one before, and they were the first to do so, or because of monopoly for market dominance. There is no collaboration between different organizations in close standards, but there is collaboration between different systems within the close standard organization. The issue with strict standards, however, is the support group. The support group is so small, by close standards, that you can count them on one hand. The support group for open standards, on the other hand, is much larger. There could be millions, if not billions, of people who are members. So, let us discuss open standards.
    &lt;/p&gt;
    &lt;p&gt;
        The support group for open standards is so large that it may include not only the software industry, but also the government and other industries such as healthcare, transportation, education, and so on, and each industry has representatives. The new common protocol can be discussed or even debated by each representative. This new protocol is part of a larger document that promotes common standards. The public was given access to this common document, which has since become an open standard. Because the open standards support group is so large, the open standards have a higher value than closed standards. The network effect is the term for this phenomenon. In open standards, different organizations use the same exchange formats (such as XML or JSON) and protocols (like HTTP or WS).
    &lt;/p&gt;
    &lt;p&gt;
        It&apos;s possible that an organization&apos;s inability to collaborate with other organizations is due to the lack of an open standard. They are instead using a closed standard. Close standards also have financial ramifications for the company. If a product is not interoperable, for example, it may result in a monopoly. Furthermore, monopoly can lead to abuses such as exclusive dealing, in which a new organization entering the market must adjust their system to the monopolist&apos;s system. This isn&apos;t interoperability; it&apos;s compatibility. One example is Apple&apos;s removal of the JVM, which forces you to develop iOS apps using their proprietary standards. There will be no need for collaboration because all you have to do is adjust your system to meet their requirements. Apple, on the other hand, changed their mind three weeks after the OpenJDK project was released.
    &lt;/p&gt;
    &lt;p&gt;
        Some monopoly abuses are illegal in most countries and may result in the company&apos;s dissolution. Breaking up a monopolist means dividing it into smaller organizational entities that are now owned by different people. A monopoly, on the other hand, isn&apos;t always a bad thing. It&apos;s only a problem if the abuses are widespread among monopolists. The government has the power to easily circumvent the market, so imposing a breakup is not out of the question. The government, on the other hand, supports open standards because they allow new entrants into the market to adjust their systems based on the decisions of multiple organizations rather than just one. This is beneficial because we value the benefits of a large number of people.
    &lt;/p&gt;
    &lt;p&gt;
        Now we&apos;ll talk about cross-origin interoperability and syntactic interoperability. Another type of interoperability is what we call an abstraction layer that connects different systems, the language interoperability. The Java programming language is a good example of language interoperability. Because of the Java Virtual Machine (JVM), Java can be used on a variety of systems. However, because different organizations use different programming languages, it is not cross-origin interoperable, but it is syntactically interoperable. As a result, Java is getting closer to the close standard. However, due to OpenJDK, this may not be the case.
    &lt;/p&gt;
    &lt;p&gt;
        Because different organizations are working together to create a common protocol, OpenJDK is getting closer to the open standard. However, due to lock-in, OpenJDK may suffer from syntactic interoperability. It means that in the end, you&apos;ll be forced to use Oracle JDK. However, we see the problem with using the programming language as an abstraction layer. Another abstraction layer that should be used is referred to as an algorithm. You might be surprised to learn that algorithms are used not only in programming languages, but also in systems. We can use them in system design like system architecture, software architecture, and even information architecture, to name a few applications. As a result, I&apos;d like to talk about them on my blog next.
    &lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;
        If there are no water purification facilities, raw water collection points, or drainage basins in a water supply system, there will be no water storage, such as water towers. As a result, the abstraction layer can bring disparate parts together, and that is the only way to refer to something as a system. This abstraction layer also enables different organizations to collaborate with one another for mutual benefit. The issue with strict standards is the support group. The support group for open standards, on the other hand, is much larger.
    &lt;/p&gt;
    &lt;p&gt;
        Millions, if not billions, of people who are members of an organization could be involved. Open standards have a higher value than closed standards due to the network effect. Different organizations use the same exchange formats in open standards and protocols in closed standards.
    &lt;/p&gt;
    &lt;p&gt;
        Expert: It&apos;s possible that an organization&apos;s inability to collaborate with other organizations is due to the lack of an open standard. Close standards also have financial ramifications for the company. If a product is not interoperable, for example, it may result in a monopoly. Furthermore, monopoly can lead to abuses such as exclusive dealing, in which a new organization entering the market must adjust their system to the monopolist&apos;s system.
    &lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;desktop__size &quot;&gt;
  &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/09/01/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &amp;nbsp;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/09/01/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">An emotional attachment to a piece of software is a natural part of the human and computer systems. That&apos;s right, their operating systems are in sync. If there are no water purification facilities, raw water collection points, or drainage basins in a water supply system, there will be no water storage, such as water towers.</summary></entry><entry><title type="html">Design for the benefit of the community</title><link href="http://localhost:3000/2021/08/30/blog/" rel="alternate" type="text/html" title="Design for the benefit of the community" /><published>2021-08-30T00:00:00+08:00</published><updated>2021-08-30T00:00:00+08:00</updated><id>http://localhost:3000/2021/08/30/blog</id><content type="html" xml:base="http://localhost:3000/2021/08/30/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.8.30.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size &quot; style=&quot;text-align: center;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;Design for the benefit of their community&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size &quot; style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;Design for the benefit of their community&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size &quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
          &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        30 August 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            08/30/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;
        We all know that design is a specification for the creation of objects. And that it is the designer who creates the specifications. There are landscape designers, industrial designers, furniture designers, and other types of designers. However, I&apos;d like to discuss interaction designers. Interaction design (or IxD) is a technique used by an interaction designer. IxD is a technique for creating interactive objects. It could be a physical object like a hammer or a digital object like a computer.
    &lt;/p&gt;
    &lt;p&gt;
        Now we&apos;d like to concentrate on computers. When we talk about interactive design on computers, we&apos;re really talking about how humans (users) interact with computers. Because the computer is an interactive object, it is a human who interacts with it. The human is the one who gives the computer instructions (instruction environment), and the computer is the one who gives the user the result of the instruction (machine environment). It is based on Human-Computer Interaction (HCI) research (or HCI).
    &lt;/p&gt;
    &lt;p&gt;
        Human-computer interaction (HCI) is the study of how people interact with computers. However, we will not discuss everything in HCI because this blog is not the appropriate place to learn everything in HCI, but if you are interested, you can conduct a literature review and publish some research papers by going to a school library or Google Scholar. However, rather than publishing a research paper, we will concentrate on software development.
    &lt;/p&gt;
    &lt;p&gt;
        I can only give you a few aspects of HCI that you should be familiar with and will use frequently in software development. So, in HCI, there&apos;s a method called User-Centered Design (UCD) that you can use. UCD is an anatomy (or framework) that must be used during the development stage in order to produce a usable product. It&apos;s similar to a cheat sheet, a piece of paper that you must pass to each person in the classroom who sits next to you. They must understand that their grade is for their mom, and that the grade is critical in making their mother proud. You should not, of course, cheat.
    &lt;/p&gt;
    &lt;p&gt;
        You can imagine the house&apos;s designer. Of course, before the framework can be built, the researchers must first gather important information about the user. This will allow us to learn more about the user, pass that information on to the designer, begin construction on the house framework, pass the framework to the house supervisor, and then the supervisor instructs the construction workers on how to use the framework. When we compare this framework for building houses to software development, it&apos;s similar to the Swing GUI framework in Java or the Bootstrap framework in JavaScript. As new information about the user becomes available, this framework is refined and refined again during acceptance testing. However, participatory design is where the framework is best refined.
    &lt;/p&gt;
    &lt;p&gt;
        Participatory design is a technique for fine-tuning the framework. All stakeholders are involved in participatory design. Employees, suppliers, customers, or end users are all involved in participatory design, for example. Of course, if your general team is involved, this approach will be much more effective. Researchers, developers, testers, and others, for example, are all involved. We design alongside them in participatory design to create an appropriate culture and emotions. This is related to placemaking, which is the process of designing a space based on the people who live there. That is, the community is the focal point of placemaking.
    &lt;/p&gt;
    &lt;p&gt;
        When we connect placemaking to participatory design, we&apos;re saying that stakeholders know more than the rest of the team. Because you can&apos;t conduct participatory design if you don&apos;t know what problem you&apos;re trying to solve if you&apos;re just starting to create a software product, some people try to conduct a literature review to extract some problems before conducting participatory design. Participatory design, on the other hand, only allows us to fine-tune the problem we&apos;re trying to solve. This will enable us to create an emotional bond between our target user and the solution we&apos;re developing.
    &lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;
        This blog is based on Human-Computer Interaction (HCI) research (or HCI). HCI is the study of how people interact with computers. In HCI, there&apos;s a technique called User-Centered Design that you can use (UCD). UCD is an anatomy (or framework) that must be used in order to produce a user-friendly product. All stakeholders are involved in participatory design - employees, suppliers, customers, or end users - and we design alongside them to create an appropriate culture and emotions.This is related to placemaking, which is the process of designing a space based on the people who live there. Participatory design allows us to fine-tune the problem we&apos;re trying to solve so we can create an emotional bond between our target user and the solution we&apos;re developing.
    &lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;desktop__size &quot;&gt;
  &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/08/30/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &amp;nbsp;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/08/30/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">We all know that design is a specification for the creation of objects. And that it is the designer who creates the specifications. There are landscape designers, industrial designers, furniture designers, and other types of designers.</summary></entry><entry><title type="html">Modern approach and practice for CI and CD</title><link href="http://localhost:3000/2021/08/28/blog/" rel="alternate" type="text/html" title="Modern approach and practice for CI and CD" /><published>2021-08-28T00:00:00+08:00</published><updated>2021-08-28T00:00:00+08:00</updated><id>http://localhost:3000/2021/08/28/blog</id><content type="html" xml:base="http://localhost:3000/2021/08/28/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.8.28.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Modern approach and practice for CI and CD&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Modern approach and practice for CI and CD&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
        &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
    &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        28 August 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
 &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            08/28/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;
        Defects are common in software development, as we all know. When you come across it, you can be sure that stakeholders are unhappy with it, and they will ask you how long they should wait for a fix (or changes). You can try to tell them the time, but they are interested in more than just the time. They care about how the changes are delivered. In software development, the product that can change the most quickly in a constrained environment win, while those who are slow to change lose. As a result, mistakes must be discovered early, and changes must be delivered quickly. Change delivery necessitates some practice (practice) and a software engineering approach (approach), so we must employ continuous integration (practice), continuous delivery and continuous deployment (approach).
    &lt;/p&gt;
    &lt;p&gt;
         So, first and foremost, I&apos;d like to discuss continuous integration (or CI). It&apos;s more of a (practice) than a tool. The tool is designed to aid in practice. Back in the day, we used source code management (SCM) in a source code control system (SCCS). Branching and merging were common in SCM for code review (CR) purposes, similar to what developers do in extreme programming (XP). They review each other&apos;s code, that&apos;s right. In branching, every branch should go to the CR branch, but the problem is that other branches&apos; changes are too late or too early, so merging to the CR branch produces contradictory results because two changes from two branches collide, and they reject it.
    &lt;/p&gt;
    &lt;p&gt;
        As a result, researchers are considering new practices to solve the problem, one of which is to use continuous integration (CI). CI is a practice similar to what we do in XP, but it does not involve branching or merging. Instead, there is only one mainline, and you must commit to that mainline every day. This is referred to as a daily build. Mistakes are discovered early in a daily build, and if the build fails, it can be quickly identified, and the changes can then be delivered.
    &lt;/p&gt;
    &lt;p&gt;
        So, what should we do if the build goes well? We must, of course, test in the build. Testing in the build is more than just that. Because CI necessitates the use of a test suite. The term test suite refers to a collection of test cases (with a test case ID). This means that for each defect-fix commit (with an issue ID on the issue board), that defect-fix commit will be tracked separately using a traceability matrix. And if it passes, we generate executables, which we then deploy. Even if you used continuous integration back then, some people did manual building, manual testing, and manual deployment, which made CI slower. As a result, we&apos;ll need a strategy for dealing with automation. Here&apos;s where the CI/CD comes in handy.
    &lt;/p&gt;
    &lt;p&gt;
       So, now I&apos;d like to discuss continuous delivery (CD). Remember that when we use CD, we&apos;re using an (approach) rather than a tool like Jenkins or GoCD. Only those approaches will benefit from the tool, which will automate some tasks such as building, testing, and deploying. When you use a Kanban system, you can make better use of CDs (the pipeline). As an example, consider a pipeline. Each pipeline has different stages, as we all know. As an example, 
    &lt;/p&gt;
    &lt;p&gt;
        Stage 1: Research (manual) &lt;br /&gt;
        Stage 2: Architecture (software or system) and Design (manual) &lt;br /&gt;
        Stage 3: Development (manual or automated) &lt;br /&gt;
        Stage 4: Testing (manual or automated) &lt;br /&gt;
        Stage 5: Deployment (automated) &lt;br /&gt;
        Stage 6: Monitoring &lt;br /&gt;
    &lt;/p&gt;
    &lt;p&gt;
        Stages 3 to 5 can be automated, but not completely, because some sub-stages are still required because each stage can be broken down even further. As an example,
    &lt;/p&gt;
    &lt;p&gt;
        Stage 3: Development &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 3.1 code commit (manual) &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 3.2 code review (automated or manual) &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3.2.1 check code style/standard &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3.2.2 rearrange code &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3.2.3 check copyright &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3.2.4 etc. &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 3.3 version control system (automated) &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 3.4 automation server (Jenkins or GoCD) &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; &amp;nbsp; 3.4.1 build (automated) &lt;br /&gt;
        Stage 4: Testing &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 4.1 unit test (automated) &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 4.2 acceptance test (manual or automated) &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 4.3 release (automated) &lt;br /&gt;
        Stage 5: Deployment (automated)
    &lt;/p&gt;
    &lt;p&gt;
        Note that code review in the IDE can be automated, but not in text/code editors such as VS Code or Notepad++. It&apos;s also worth noting that we have &quot;manual or automated&quot; on the same stage. This implies that the stage can be further subdivided. For example, in acceptance testing, there is regression testing (automated), sanity testing (manual) and more. In stage 4.3, the release, they can be executables like jar files (Java) or static files (JavaScript). It indicates that the files are ready for deployment, and that the files will be deployed using a CD automatically. Smaller items flow through the pipeline faster than larger items. This is to avoid making major mistakes. If the items are small, the mistakes are small, and fixing them if they occur is easy.
    &lt;/p&gt;
    &lt;p&gt;
        Because a successful build can still fail in production due to software incompatibility, some developers use feature toggle to ensure that if one feature fails in production, we can turn it off. The tasks in the pipeline are synchronous, and at each stage, people with varying skills may be involved. Researchers are involved in the first stage. They could be data scientists, such as data miners, machine learning scientists, or big data analysts, among other things. Software architects, system architects, information architects, UX designers, and even psychologists are involved in the second stage.
    &lt;/p&gt;
    &lt;p&gt;
        It&apos;s because they need to create documentation (or specification) so that the developers can put it into practice. Isn&apos;t this documentation familiar to us? We know this because when we use community dependencies (such as open-source libraries), we read the documentation. However, in commercial dependency, some documentation is private and only available within the enterprise. As a result, in my next blog, I&apos;d like to discuss stage 2, the architecture and design.
    &lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;
        In software development, the product that can change the most quickly in a constrained environment win, while those who are slow to change lose. We must employ continuous integration (practice), continuous delivery and continuous deployment (approach). CI is a practice similar to what we do in XP, but it does not involve branching or merging. In stage 4.3, the release, they can be executables like jar files (Java) or static files (JavaScript). It indicates that the files are ready for deployment, and will be deployed using a CD automatically.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
  &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/28/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/28/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">Defects are common in software development, as we all know. When you come across it, you can be sure that stakeholders are unhappy with it, and they will ask you how long they should wait for a fix (or changes).</summary></entry><entry><title type="html">Software Defects Management for Mistake</title><link href="http://localhost:3000/2021/08/25/blog/" rel="alternate" type="text/html" title="Software Defects Management for Mistake" /><published>2021-08-25T00:00:00+08:00</published><updated>2021-08-25T00:00:00+08:00</updated><id>http://localhost:3000/2021/08/25/blog</id><content type="html" xml:base="http://localhost:3000/2021/08/25/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.8.25.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Software Defects Management for Mistake&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Software Defects Management for Mistake&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
        &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
    &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        25 August 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
 &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            08/25/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;
        So, in my previous blog, I discussed debt. Other types of debt exist, such as architecture debt, infrastructure debt, and so on, but I&apos;d like to focus on technical debt today because it is the most common type of debt in the software industry. As a result, one of the most common topics discussed by experienced programmers in the software industry is technical debt. So, when we talk about technical debt, we&apos;re actually talking about software defects. Because the term bug can refer to insects, some people prefer to refer to it as a defect, because a defect is the result of a mistake. This is called Mistake metamorphism.
    &lt;/p&gt;
    &lt;p&gt;
        In mistake metamorphism, when we change some parts of the source code, we may need to change other parts of the source code as well in order for the software to function properly. Unfortunately, some of us would rather not change certain other parts (or components) for various reasons (maybe because it was hard to change). This is a mistake. And this mistake continues to flow through the pipeline (or Kanban board). That mistake slowly transforms into something dark as it travels through the pipeline. It&apos;s so dark that it&apos;s now considered a defect in the pipeline&apos;s final stage (deployment). And that defect can result in software that isn&apos;t up to par. It means that some of it is functional, but not all of it is. For example, clicking the button is working, but clicking the anchor is not.
    &lt;/p&gt;
    &lt;p&gt;
        When some parts of a programme work before but not after a change, this is referred to as software regression (defect). Some defects, however, are unintentional. For example, just because you change some parts of the source code and leave the rest alone to make the software work perfectly does not mean there isn&apos;t a defect. It could be due to incompatibilities that cause the software to perform poorly. Some parts (components) of your software, for example, may not work in the runtime environment. This is due to the execution model&apos;s inability to comprehend your source code. It&apos;s possible that the execution model from that runtime entails using &quot;if statement&quot; with parenthesis instead.
    &lt;/p&gt;
    &lt;p&gt;
        This type of incompatibility is called Software incompatibility. It&apos;s also possible that the runtime environment has been updated and no longer supports the programming language features you&apos;re using (or vice versa). And it&apos;s here that forward and backward compatibility is established. Forward compatibility is used when your software needs to work flawlessly with a new version of the runtime environment. Backward compatibility is available for older versions of the runtime environment. Because your system is still young and mistakes are common, you&apos;re more likely to encounter intentional defects in greenfield projects.
    &lt;/p&gt;
    &lt;p&gt;
        Defect triage, on the other hand, can be used to manage defects. Some tools, such as Github or Trello, refer to this as bug triage, but this is incorrect. If you rely on these tools excessively, you may be justified in using the term bug triage during working hours, and you may disagree with me. Using the word defect, on the other hand, is transparent because it indicates that you made a mistake, which you should not hide from the public.
    &lt;/p&gt;
    &lt;p&gt;
        In any case, the most common method of defect triage is through the use of a tool and a casual meeting. To avoid infobesity, the tool includes a defect triage board (board), four columns (open, high priority, low priority, closed), and a WiP limit for each column. The developer who made the mistake in the version control system should speak with the tester during the casual meeting. Some prefer to speak with stakeholders and product owners because they are more familiar with the scope of the technical debt&apos;s impact and may be able to offer useful solutions. Some people prefer to use an issue board instead of talking to stakeholders and product owners. An issue board is preferable because it allows more people to discuss the problem than just the developer and tester.
    &lt;/p&gt;
    &lt;p&gt;
        Rather than adding a defect to the issue board, some developers prefer to avoid mistakes right away. However, some errors are unintentional, such as software incompatibility. But mistakes can also be reduced to a bare minimum. As a result, we must prioritise and estimate the issue. You need to know the issue&apos;s value and size in order to prioritise and estimate it. The output of resolving the problem must be useful to the user, and the impact should be minimal. It should be kept to a minimum because a large impact means a large mistake. And, no matter how significant the impact, most users will not value what you fix if the issue is not valuable. This can lead to a waste of time.
    &lt;/p&gt;
    &lt;p&gt;
        In addition to size and value, people use velocity (for scrum) and time (for kanban). In fact, in software development, velocity and time are critical because they are used to communicate with stakeholders. The standard deviation formula is used to calculate the mean of the total number of story points in four sprints over the course of a month. However, because the velocity has no units like tasks per minute, there are trust issues between the team and the stakeholders. As a result, some people attempt to convert velocity to time. For instance, 30 points equals 6 days, 60 points equals 12 days, and so on. T-shirt sizing and the cone of uncertainty are also used by some people to communicate with stakeholders, but this is beyond the scope of this blog.
    &lt;/p&gt;
    &lt;p&gt;
        As a result, some people prefer to use time (in kanban). You use time in kanban to communicate with stakeholders about how long they should expect their product to arrive. Lead time, cycle time, and actionable agile metrics (ACM) are used to calculate time. I won&apos;t go into detail because it&apos;s much better if you investigate it for yourself to gain a better understanding. All of this talk about velocity and time, on the other hand, is a way of communicating to stakeholders how long it will take to fix the defect. You&apos;ll need a way to explain to stakeholders how long they should wait for the fix, especially if the defect is valuable.
    &lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;
        Technical debt is the most common type of debt in the software industry. Technical debt refers to software defects, which can be caused by mistake and incompatibilities. Some people prefer to refer to it as a defect, because a defect is the result of a mistake. In mistake metamorphism, when we change some parts of the source code, we may need to change other parts too. And this mistake slowly transforms into something dark as it travels through the pipeline.
    &lt;/p&gt;
    &lt;p&gt;
        It&apos;s so dark that it&apos;s now considered a defect in the pipeline&apos;s final stage (deployment) And that defect can result in software that isn&apos;t up to par. Some tools, such as Github or Trello, refer to bug triage as bug triage, but this is incorrect. Using the word defect, on the other hand, is transparent because it indicates that you made a mistake, which you should not hide from the public. If you rely on these tools excessively, you may be justified in using the term bug trage during working hours, and you may disagree with me.
    &lt;/p&gt;
    &lt;p&gt;
        The most common method of defect triage is through the use of a tool and a casual meeting. Some people prefer to use an issue board instead of talking to stakeholders and product owners. The output of resolving the problem must be useful to the user, and the impact should be minimal. This is because it should be kept to a minimum because a large impact means a large mistake. Some people prefer to use time (in kanban) to communicate with stakeholders about how long they should expect their product to arrive.
    &lt;/p&gt;
    &lt;p&gt;
        Lead time, cycle time, and actionable agile metrics (ACM) are used to calculate time. Time is a way of communicating to stakeholders how long it will take to fix a defect, especially if the defect is critical. It&apos;s much better if you investigate it for yourself to gain a better understanding.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
  &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/25/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/25/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">So, in my previous blog, I discussed debt. Other types of debt exist, such as architecture debt, infrastructure debt, and so on, but I&apos;d like to focus on technical debt today because it is the most common type of debt in the software industry.</summary></entry><entry><title type="html">Continual Improvement for Kanban Team</title><link href="http://localhost:3000/2021/08/24/blog/" rel="alternate" type="text/html" title="Continual Improvement for Kanban Team" /><published>2021-08-24T00:00:00+08:00</published><updated>2021-08-24T00:00:00+08:00</updated><id>http://localhost:3000/2021/08/24/blog</id><content type="html" xml:base="http://localhost:3000/2021/08/24/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.8.24.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Continual Improvement for Kanban Team&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Continual Improvement for Kanban Team&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
        &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
    &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        24 August 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
 &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            08/24/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;
        Now, I mentioned Scrum, Kanban, and Scrumban yesterday (for small teams). Additionally, Prince2 Agile and PMI (for big teams). At some point in our personal lives, we all want to improve ourselves. But the improvement I&apos;m referring to is for the Kanban team, specifically for their standards/culture. I&apos;d like to start with small teams because, after all, we all start small and work our way up, right? Okay, that&apos;s enough for now.
    &lt;/p&gt;
    &lt;h4&gt;Continual Improvement&lt;/h4&gt;
    &lt;p&gt;
        We&apos;ve all heard the phrase &quot;continuous improvement.&quot; Essentially, it was changed to continual improvement due to the semantics of the word itself, as continuous refers to improvement through repetition, whereas continual refers to improvement through scaling. So, we have scaling vs. repeating. You improve by repeating the standard/culture rather than scaling it to something better if you use continuous improvement 
    &lt;/p&gt;
    &lt;p&gt;
        However, if you use continual improvement, you can improve by scaling up the standard/culture without having to repeat it. As a result, the semantics of the latter are far superior to the former. Because there was a debate among the &lt;a href=&quot;https://www.iso.org/standard/21823.html&quot; target=&quot;_blank&quot;&gt;ISO 9001:2000&lt;/a&gt; developers about the meaning of continuous improvement, &lt;a href=&quot;https://www.iso.org/committee/53882.html&quot; target=&quot;_blank&quot;&gt;ISO/TC 176&lt;/a&gt; changed it.
    &lt;/p&gt;
    &lt;h4&gt;Retrospective&lt;/h4&gt;
    &lt;p&gt;
        In any case, we want to raise our standards/culture. Every business culture/standard is distinct in its own way. You&apos;ll also need to scale yours.
    &lt;/p&gt;
    &lt;p&gt;
        Scaling your standards/culture is simple in Scrum. Go at &lt;a href=&quot;https://retromat.org/&quot; target=&quot;_blank&quot;&gt;Retromat&lt;/a&gt; and scroll down to learn how to do a retrospective in scrum. Although there are ordered stages that you must follow, I recommend that you click on each hashtag for each stage and try them out:
    &lt;/p&gt;
        &lt;ol&gt;
            &lt;li&gt;
                Set the stage (&lt;a href=&quot;https://retromat.org/en/?id=122&quot; target=&quot;_blank&quot;&gt;#122&lt;/a&gt;)
            &lt;/li&gt;
            &lt;li&gt;
                Gather data (&lt;a href=&quot;https://retromat.org/en/?id=51&quot; target=&quot;_blank&quot;&gt;#51&lt;/a&gt;)
            &lt;/li&gt;
            &lt;li&gt;
                Generate insights (&lt;a href=&quot;https://retromat.org/en/?id=9&quot; target=&quot;_blank&quot;&gt;#9&lt;/a&gt;)
            &lt;/li&gt;
            &lt;li&gt;
                Decide what to do (&lt;a href=&quot;https://retromat.org/en/?id=39&quot; target=&quot;_blank&quot;&gt;#39&lt;/a&gt;)
            &lt;/li&gt;
            &lt;li&gt;
                Close the retrospective (&lt;a href=&quot;https://retromat.org/en/?id=60&quot; target=&quot;_blank&quot;&gt;#60&lt;/a&gt;)
            &lt;/li&gt;
        &lt;/ol&gt;
    &lt;p&gt;
        This should be done every 1-2 weeks sprints, in scrum, of course. The story is different in Kanban.
    &lt;/p&gt;
    &lt;p&gt;
        Scaling your standards/culture in Kanban is difficult. In Kanban, you&apos;ll need an &lt;a href=&quot;https://en.wikipedia.org/wiki/A3_problem_solving&quot; target=&quot;_blank&quot;&gt;A3 Problem Solving&lt;/a&gt; (method), an &lt;a href=&quot;https://en.wikipedia.org/wiki/A3_problem_solving#/media/File:A3_problem_solving_worksheet.jpg&quot; target=&quot;_blank&quot;&gt;A3 Problem Solving Template&lt;/a&gt; (paper), a &lt;a href=&quot;https://en.wikipedia.org/wiki/PDCA&quot; target=&quot;_blank&quot;&gt;PDCA&lt;/a&gt; (design), a &lt;a href=&quot;https://www.reliableplant.com/root-cause-analysis-31548&quot; target=&quot;_blank&quot;&gt;Root Cause Analysis Tool&lt;/a&gt; (lean tool), and an &lt;a href=&quot;https://www.targetprocess.com/blog/development-practice-retrospectives-in-kanban/&quot; target=&quot;_blank&quot;&gt;Issue board&lt;/a&gt; (board) to conduct a retrospective.
    &lt;/p&gt;
    &lt;p&gt;
       The A3 Problem Solving is the first (method). It&apos;s self-explanatory if you use an A3 Problem Solving Template (paper), which is an A3-size piece of paper like this:
    &lt;/p&gt;
    &lt;p&gt;
      &lt;img src=&quot;https://user-images.githubusercontent.com/38276345/130525644-b2bc26f4-41cf-40d6-8d66-e9c200a16f24.jpg&quot; class=&quot;img-fluid&quot; alt=&quot;template&quot; /&gt;
      &lt;figcaption&gt;Figure 1. A3 Problem Solving Template (&lt;a href=&quot;https://en.wikipedia.org/wiki/A3_problem_solving#/media/File:A3_problem_solving_worksheet.jpg&quot; target=&quot;_blank&quot;&gt;source&lt;/a&gt;)&lt;/figcaption&gt;
    &lt;p&gt;
        You can now use the PDCA (design), and Root Cause Analysis Tool (lean tool).
    &lt;/p&gt;
    &lt;p&gt;
        Plan:
        &lt;ol&gt;
            &lt;li&gt;Clarify the problem&lt;/li&gt;
            &lt;li&gt;Breakdown the problem&lt;/li&gt;
            &lt;li&gt;Set the target&lt;/li&gt;
            &lt;li&gt;Analyze the Root Cause - use the &lt;a href=&quot;https://www.reliableplant.com/root-cause-analysis-31548&quot; target=&quot;_blank&quot;&gt;Root Cause Analysis Tool&lt;/a&gt; (lean tool)&lt;/li&gt;
            &lt;li&gt;Develop counter measures&lt;/li&gt;
         &lt;/ol&gt;
         Do: &lt;br /&gt;
         &amp;nbsp; &amp;nbsp; 6. Implement countermeasures
        &lt;br /&gt;
        Check: &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 7. Monitor Results and Process
        &lt;br /&gt;
        Adjust: &lt;br /&gt;
        &amp;nbsp; &amp;nbsp; 8. Standardize and share success
        &lt;br /&gt;
    &lt;/p&gt;
    &lt;p&gt;
        There are stages in scrum that must be followed in order (stages). You must use an A3 Problem Solving in Kanban (method). Every 1-2-week sprint in scrum, you must conduct a retrospective. In Kanban, an Issue board (board) is required to conduct a retrospective.
    &lt;/p&gt;
    &lt;p&gt;
        Now, your problems/issues are collected on the issue board (board). The number of problems/issues on the issue board (board) is actually limited to 5. Only if the issue board (board) now contains 5 problems/issues does a retrospective take place. The issuer of issue should clarify the problem, break the problem into smaller parts and set the target (or goal). 
    &lt;/p&gt;
    &lt;p&gt;
        The problem/issue must now be transferred to the A3 Problem Solving Template (paper), PDCA (design), and use Root Cause Analysis Tool (lean tool) so that we can determine the root cause of the issue and develop countermeasures (solution). If the the results in the implementation of the solution is working, use it to change your standards or culture.
    &lt;/p&gt;
    &lt;h4&gt;Physical vs Virtual (Retrospective)&lt;/h4&gt;
    &lt;p&gt;
        You may now be physically working, usually in a building. Try the above if you want to conduct a retrospective. Try the (stages) for scrum. You can use the (method) for kanban. However, we may work remotely on occasion, and in this case, retrospective is a little different because our standards/culture have changed as a result of the pandemic. You should try to use a retrospective tool if you are working remotely and want to conduct a retrospective. Try the &lt;a href=&quot;https://www.retrium.com/&quot; target=&quot;_blank&quot;&gt;Retrium&lt;/a&gt; or &lt;a href=&quot;https://www.leancoffeetable.com/&quot; target=&quot;_blank&quot;&gt;Lean Coffee Tables&lt;/a&gt; for scrum. You can use Trello, Zoom, or Webex for Kanban.
    &lt;/p&gt;
    &lt;p&gt;
        It&apos;s a little more difficult in Kanban because we frequently use (method) rather than (stages). To put it another way, in Kanban, we have an Issue board (board) in Trello where we can put 5 issues. Why are there only 5 issues? It usually depends on your team, but keep in mind that in Kanban, each column in the Kanban board has a N + 1 value. This means that if the issue board has 4 people in charge, we can add another issue to them. If there are 4 people, there must be 5 issues.
    &lt;/p&gt;
    &lt;p&gt;
        Rather than being members of the specific team, these 4 people are members of the general team. Why? Because they&apos;ll do some planning, implementation, monitoring and standardization that are not specificically pass to the specific team. They will now conduct the retrospective if there are 5 issues on the issue board. Typically, they will discuss the issue in a zoom or webex session while holding an A3-size paper/document.
    &lt;/p&gt;
    &lt;p&gt;
        Tool time is a method of resolving an issue by the entire team. Tool time is named after the general team&apos;s decision to use various &lt;a href=&quot;http://resources.hartfordtechnologies.com/blog/the-ultimate-list-of-lean-manufacturing-tools&quot; target=&quot;_blank&quot;&gt;lean manufacturing tools&lt;/a&gt; to resolve the problem.
    &lt;/p&gt;
    &lt;h4&gt;RPD and DxA&lt;/h4&gt;
    &lt;p&gt;
        They need to know the Retrospective Prime Directive (or RPD) and Discussion vs. Action (DxA) while discussing the issue in a zoom or webex session. In RPD, they discuss without blaming the problem on the team member who caused it (or mistake). If you blame them, this is bad because they may not open an issue again because they are afraid of being caught. In DxA, action takes precedence over discussion, because retrospective is pointless unless there is a change in standard/culture.
    &lt;/p&gt;
    &lt;h4&gt;Debt&lt;/h4&gt;
    &lt;p&gt;
        You may be familiar with the term &quot;technical debt.&quot; Instead of issue boards, they&apos;re common on bug triage boards. The main difference is that the bug triage board primarily focuses on code issues, with the development team instead of the management team in charge, whereas the issue board primarily focuses on general issues such as:
    &lt;/p&gt;
    &lt;p&gt;
        &lt;ol&gt;
            &lt;li&gt;Architecture Debt&lt;/li&gt;
            &lt;li&gt;Infrastructure Debt&lt;/li&gt;
            &lt;li&gt;Documentation Debt&lt;/li&gt;
            &lt;li&gt;Monetary Debt&lt;/li&gt;
            &lt;li&gt;Technical Debt&lt;/li&gt;
            &lt;li&gt;And more&lt;/li&gt;
        &lt;/ol&gt;
    &lt;/p&gt;
    &lt;p&gt;
        On the issue board, the one in charge is the general team instead of the development team. If debts are increasing, they can speed up the system&apos;s entropy. To slow down system entropy, the boy scout rule should be used to reduce debt. According to boy scout rules, you must clean something before moving it from left to right on the Kanban board.        
    &lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;
        Every business culture/standard is distinct in its own way. Scaling your standards/culture is simple in Scrum, but it&apos;s different in Kanban. In Kanban, you&apos;ll need an A3 Problem Solving (method), a PDCA (design), a Root Cause Analysis Tool (lean tool) and an Issue board (board) Every 1-2 weeks in scrum, you must conduct a retrospective. This should be done every 1 to 2 weeks, of course. If you don&apos;t scale up the standard/culture, you have to repeat it.
    &lt;/p&gt;
    &lt;p&gt;
        Try the Retrium or Lean Coffee Tables for scrum. You can use Trello, Zoom, or Webex for Kanban. Try the (method) for kanban if you are working remotely and want to conduct a retrospective. If there are 5 issues on an issue board, there must be 5 people in charge of them. The general team will conduct the retrospective if there are more than 5 issues. They will discuss the issue while holding an A3-size paper/document.
    &lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
  &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/24/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/24/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;
                &lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;&lt;/div&gt;</content><author><name>Pebojot</name></author><summary type="html">Now, I mentioned Scrum, Kanban, and Scrumban yesterday (for small teams). Additionally, Prince2 Agile and PMI (for big teams). At some point in our personal lives, we all want to improve ourselves. But the improvement I&apos;m referring to is for the Kanban team</summary></entry><entry><title type="html">The Software Industryâ€™s Project Management. Basically</title><link href="http://localhost:3000/2021/08/22/blog/" rel="alternate" type="text/html" title="The Software Industryâ€™s Project Management. Basically" /><published>2021-08-22T00:00:00+08:00</published><updated>2021-08-22T00:00:00+08:00</updated><id>http://localhost:3000/2021/08/22/blog</id><content type="html" xml:base="http://localhost:3000/2021/08/22/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.8.22.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;The Software Industry&apos;s Project Management. Basically&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size&quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;The Software Industry&apos;s Project Management. Basically&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
          &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        22 August 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            08/22/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;
        So, last month, I talked about how to create your first task when gathering functional requirements for your system, which can also include non-functional requirements. I&apos;d like to discuss how you can handle these tasks.
    &lt;/p&gt;
    &lt;p&gt;
        Scrum and Kanban are common task management tools in software development, but they&apos;re mostly used to track your work in a graphical chart called a burn down/up chart (for scrum) and a cumulative flow diagram (for Kanban).
    &lt;/p&gt;
    &lt;p&gt;
        There are other more advanced task management or project management methods and standards in software development, such as Prince2 Agile (method) and PMI (standard), which we will discuss later. So, first and foremost, let&apos;s talk about Scrum.
    &lt;/p&gt;
    &lt;h4&gt;Scrum&lt;/h4&gt;
    &lt;p&gt;
        By the way, what is a scrum? Let&apos;s take a look at its history to get a better understanding of it. Scrum is based on the cargo cult belief system. What is the origin of the term &quot;cargo cult&quot;? Its meaning is self-evident. During World War 2, the most accurate explanation of the cargo cult was given. Anyway, we won&apos;t go over the entire history, but the reason I&apos;m mentioning it is because a lot of cargo fell from the sky during World War 2. It was intended for the soldiers, but the islanders of Melanesia in the Pacific mistook it for a divine gift.
    &lt;/p&gt;
    &lt;p&gt;
        Is that clear? So, after World War II, these islanders in Melanesia, a Pacific island, performed rituals in the hopes of the God dropping more cargo. As a result, these rituals have become a part of their daily routine. However, they are unaware that their beliefs make them ignorant because they do not attempt to comprehend why those cargos fell from the sky in the first place. Perhaps they are unaware that World War II occurred.
    &lt;/p&gt;
    &lt;p&gt;
        When we apply this to software development, the same thing happens, which is unfortunate for anyone who is caught up in these rituals. Regrettably, there are rituals in Scrum as well (Oh no). In which a software developer follows a software development process and repeats the same process on a daily basis without realising it. Their beliefs make them ignorant because they don&apos;t try to understand why something is happening; instead, they just do it, believing that the faster you work, the more successful the software product will be (but not).
    &lt;/p&gt;
    &lt;p&gt;
        In reality, this is not the case, because competence is what determines whether software products will succeed or fail, rather than simply working on them and getting better at them to make them successful. There are Cargo cult programming practises like shotgun debugging and deep magic (among others) in Scrum, for example. If someone, does it, they try to copy code from the internet and paste it into their code editor with little knowledge of how it works. This is incompetence, and other Scrum team members may experience imposter syndrome as a result. Working on it and getting better at it causes us to lose sight of the process we&apos;re following.
    &lt;/p&gt;
    &lt;h5&gt;Product Backlog&lt;/h5&gt;
    &lt;p&gt;
        There is a product backlog in Scrum. It&apos;s similar to a to-do list where you write down all of your tasks. If these tasks are added to the product backlog, they are now known as product backlog items (or just PBI). These PBIs could be either functional or non-functional requirements. We also know that user stories are used to create these PBIs (refer to my old blog). However, it is the product owner who prioritises PBIs and estimates their size in the product backlog. He/she usually refers to it by the acronym INVEST.
    &lt;/p&gt;
    &lt;h5&gt;Team&lt;/h5&gt;
    &lt;p&gt;
        We heard from the product owner now, but not from the other members. In scrum, the team is usually quite small. Because they&apos;re so small, they&apos;re divided into three columns: product owner, developer, and scrum master. Scrum uses a cross-functional organisational structure rather than a functional one. And the members of the team are self-managing.
    &lt;/p&gt;
    &lt;p&gt;
        The scrum master is an important column in the scrum. The scrum master is the person in charge of removing roadblocks to the delivery of the product that has been identified in the daily standup (it is a short meeting). The project manager differs from the Scrum master in that the project manager has people management skills, whereas the Scrum master does not.
    &lt;/p&gt;
    &lt;h5&gt;Transition of PBIs&lt;/h5&gt;
    &lt;p&gt;
        So, think of a PBI as an item flowing through the pipeline once more (like oil). We&apos;re not talking about oil or the definition of the word here in the dictionary; rather, we&apos;re talking about the PBI&apos;s Definition of Ready (DoR) and Definition of Done (DoD). Before we put it into development in DoR, we need to know if it&apos;s ready. And we need to know if the item is done before we put it into production. For example, in DoR, the product owner may prioritise the item and estimate its size before putting it into development, whereas in DoD, the item must be tested first before going into production, correct? In any case, we don&apos;t want bugs.
    &lt;/p&gt;
    &lt;h5&gt;Story Pointing&lt;/h5&gt;
    &lt;p&gt;
        So, we now know that user stories are similar to wishes written on index cards. Let&apos;s say we gathered 60 index cards with our respondents&apos; wishes on them. This allows us to categorise similar wishes into epics. Separate the epics into smaller tasks, which are now known as PBIs, and place them in the product backlog. We can&apos;t, however, simply add the task to the product backlog.
    &lt;/p&gt;
    &lt;p&gt;
        We must first provide them with story points. The purpose of story points is to help with task prioritisation and estimation. The lower the estimate, the higher the priority, and the smaller the story points of the tasks (size). Even if the story points of the tasks are smaller, the estimate (size) can be higher. For example, just because the tasks are more important doesn&apos;t mean the impact will be smaller; it could be even larger at some point. Even if the story point is small, a simple sign-up button, for example, can have a large impact on a large number of users.
    &lt;/p&gt;
    &lt;p&gt;
        Planning poker is one method of assigning story points to tasks. You give each member of your team a card. To avoid anchoring cognitive bias, they can write the task&apos;s story points on the card without telling the rest of the team. Anchoring is a cognitive bias in which other team members influence a decision.
    &lt;/p&gt;
    &lt;h5&gt;Small Meeting&lt;/h5&gt;
    &lt;p&gt;
        We have a small meeting called daily stand-up in Scrum, which can take as little as 15-20 minutes. The main goal is to quickly identify roadblocks, with each team member sharing something that makes their development more difficult to implement. The scrum master, product owner, developers, and stakeholders were mostly present at the meeting. The blockers should be noted by the Scrum master.
    &lt;/p&gt;
    &lt;h5&gt;Burn up/down charts&lt;/h5&gt;
    &lt;p&gt;
        We now use a burnup chart and a burndown chart in Scrum. They&apos;re actually two different graphs. An x-axis and a y-axis are used in burndown charts. The number of remaining works (number of remaining work) is on the y-axis, and the number of days is on the x-axis (number of days). This is actually bad if the number of remaining works and the number of days increase. As the number of days passes, the number of remaining works should decrease.
    &lt;/p&gt;
    &lt;p&gt;
        We also have an x-axis and a y-axis in burnup charts. The number of completed works (number of completed work) is on the y-axis, and the number of days is on the x-axis (number of days). If the total number of completed works is greater than the total number of days, this is good. It is bad if the number of completed works is lower than the number of days passed.
    &lt;/p&gt;
    &lt;h4&gt;Kanban&lt;/h4&gt;
    &lt;p&gt;
        So, now that we&apos;ve discussed Scrum, there&apos;s another task/project management tool to consider: Kanban. I&apos;m going to go over a quick history of it. We&apos;ve all heard of lean manufacturing. It is commonly used in the hardware industry, such as automobiles. The car passes through the pipeline, which gradually assembles individual hardware components such as the engine, radiator beam, and engine cover into a functional vehicle.
    &lt;/p&gt;
    &lt;p&gt;
        It was used because the delivery of these separate hardware parts, such as the engine, radiator beam, engine cover, and so on, was either too early or too late back in the day. These can cause bottlenecks because if the engine or radiator beam is too early, it can increase the receiver&apos;s work; however, if the engine or radiator beam is too late, it can decrease the receiver&apos;s work and cause it to be rejected, resulting in wasted work for the sender who built those hardware parts. The delivery of hardware parts is sometimes not too early or too late, but the hardware parts may contain human errors, such as an engine or radiator beam that does not work properly.
    &lt;/p&gt;
    &lt;p&gt;
        We can now connect lean manufacturing in the hardware industry to lean manufacturing in the software industry. We use a Kanban board instead of a pipeline. We have separate software parts like the search bar, footer, tab bar, and so on, instead of separate hardware parts like the engine, radiator beam, and engine cover.
    &lt;/p&gt;
    &lt;p&gt;
        We used a Kanban board because the delivery of these software parts, such as the search bar, footer, and tab bar, was either too early or too late back in the day. These can cause bottlenecks because if the search bar or footer is too early, it may increase the receiver&apos;s tasks; however, if the search bar or footer is too late, it may decrease the receiver&apos;s tasks and cause it to be rejected, resulting in wasted work for the sender. When software parts are delivered on time, there is a chance that human error will occur, such as the search bar or footer not working properly. 
    &lt;/p&gt;
    &lt;p&gt;
        We have separate columns on the Kanban board for &quot;to-do,&quot; &quot;doing,&quot; and &quot;done,&quot; with each task moving from left to right. Each column, however, has a Work-in-Progress limit (or WiP limit). As a result, each column&apos;s tasks are limited. Because it balances the receiver&apos;s tasks, this WiP limit helps us avoid bottlenecks (no increase in task, no decrease in task). However, even if the task is balanced, there is no guarantee that the software components delivered will function correctly. As a result, there is an Entry/Exit criteria between each column (like DoR and DoD in Scrum). That is all there is to it. This Entry/Exit criterion aids us in avoiding human error in the flow of software components through the Kanban board.   
    &lt;/p&gt;
    &lt;p&gt;
        Burn up/burn down charts are used in Scrum. The Cumulative Flow Diagram is used in Kanban (CFD). We have an x-axis and a y-axis in CFD. The number of tasks in each column on the Kanban board is represented on the y-axis. The number of days is represented on the x-axis. As the number of days increases, the number of tasks should decrease. Because there is a problem if the lines in the CFD graph do not remain flat.
    &lt;/p&gt;
    &lt;h4&gt;Scrumban&lt;/h4&gt;
    &lt;p&gt;
        I describe how bad Scrum is in the first part. Scrumban was born out of this need. Scrumban is similar to peanut butter on a sandwich. Scrumban was created as a bridge between Scrum and Kanban. It was not actually intended to combine the two, but combined them to help us transition to kanban.
    &lt;/p&gt;
    &lt;h4&gt;Prince2 and PMI&lt;/h4&gt;
    &lt;p&gt;
        We previously discussed project management tools such as scrum and Kanban (or even scrumban). However, there is a more advanced project management tool known as Prince2 and Project Management Professional (PMP).
    &lt;/p&gt;
    &lt;p&gt;
        Prince2 is a project management methodology. It is, in fact, the de facto standard for project management throughout the UN system. You can use Prince2 Agile specifically for the software industry. Keep in mind that Prince2 is a very complex project management method that is typically applied to large projects. It is not always necessary to use Prince2 for smaller projects.
    &lt;/p&gt;
    &lt;p&gt;
        The PMP is a project management professional certification based on standardised project management principles. The PMP exam requires you to apply standardised project management principles. These standardised project management principles can be applied to the software industry to improve project success rates.
    &lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;
        Scrum is based on the cargo cult belief system. It involves a software developer repeating the same process every day without realising it. This leads to imposter syndrome, in which they lose sight of what&apos;s going on and get stuck in the rut.
    &lt;/p&gt;
    &lt;p&gt;
        Scrum is a cross-functional organisational structure where members of the team are self-managing. The Scrum master is the person in charge of removing roadblocks to the delivery of the product that has been identified in the daily standup (it is a short meeting) The purpose of story points is to help with task prioritisation and estimation. The smaller the story points of the task, the higher the priority, and the lower the estimate (size) Even if the story point is small, a simple sign-up button can have a large impact on users.
    &lt;/p&gt;
    &lt;p&gt;
        Lean manufacturing is commonly used in the hardware industry, such as automobiles. The delivery of hardware parts is sometimes not too early or late, but the software parts may contain human errors. Kanban board allows you to organize tasks into &quot;to-do,&quot; &quot;doing,&quot; and &quot;done&quot; columns. The Cumulative Flow Diagram is used in Kanban (CFD) The number of tasks in each column on the Kanban board is represented on the y-axis. As the number of days increases, the x-axis should decrease as the CFD graph flattens.
    &lt;/p&gt;
    &lt;p&gt;
        Scrumban was created as a bridge between Scrum and Kanban. It was not actually intended to combine the two, but combined them to help us transition to Kanban in the first part of this article. The second part describes how bad Scrum is.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size&quot;&gt;
  &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/22/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2022/08/22/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">Scrum and Kanban are common task management tools in software development, but they&apos;re mostly used to track your work in a graphical chart called a burn down/up chart (for scrum) and a cumulative flow diagram (for Kanban)</summary></entry><entry><title type="html">Describe Your Task as a Software Developer</title><link href="http://localhost:3000/2021/03/31/blog/" rel="alternate" type="text/html" title="Describe Your Task as a Software Developer" /><published>2021-03-31T00:00:00+08:00</published><updated>2021-03-31T00:00:00+08:00</updated><id>http://localhost:3000/2021/03/31/blog</id><content type="html" xml:base="http://localhost:3000/2021/03/31/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021.3.31.blog.cover.png&quot; class=&quot;rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size &quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Describe Your Task as a Software Developer&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size &quot; style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;h2&gt;Describe Your Task as a Software Developer&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size &quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
          &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        31 March 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            03/31/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
    &lt;p&gt;
      What do you do when you first get the data from your users? I wrote a blog post about how to get requirements at &lt;a href=&quot;https://www.pebojot.com/2021/03/29/blog/&quot;&gt;The Basics of Software Requirement Gathering&lt;/a&gt;, but what do you do when you get the data from your users?
    &lt;/p&gt;
    &lt;p&gt;
        You&apos;ll need to decide what you&apos;re going to make once you&apos;ve decided what product you need to make. What exactly is it? You must decide what you will do because this will serve as a means of communication with your team, allowing you to fully comprehend the problem and write a solution in the code. &lt;a href=&quot;https://en.wikipedia.org/wiki/User_story&quot; target=&quot;_blank&quot;&gt;User stories&lt;/a&gt; have become almost synonymous with &lt;a href=&quot;https://en.wikipedia.org/wiki/Agile_software_development&quot; target=&quot;_blank&quot;&gt;agile&lt;/a&gt; in many teams, though non-agile user stories also exist. From the perspective of your users, user stories represent what will be a new feature of a system. This is how you usually write them:
    &lt;/p&gt;
    &lt;p style=&quot;background-color: #D9D9D6;&quot; class=&quot;p-1&quot;&gt;
        &lt;b&gt;As &lt;i&gt;someone&lt;/i&gt;, I&apos;d like &lt;i&gt;to do something&lt;/i&gt;. In order for me to &lt;i&gt;achieve something&lt;/i&gt;&lt;/b&gt;
    &lt;/p&gt;
    &lt;p&gt;
        &lt;a href=&quot;https://www.thoughtworks.com/insights/articles/how-implement-hypothesis-driven-development&quot; target=&quot;_blank&quot;&gt;Hypothesis-driven development&lt;/a&gt;, or an &lt;i&gt;ad-hoc approach&lt;/i&gt; like writing on the back of an index card, is another option. Consider the following scenario:
    &lt;/p&gt;
    &lt;p style=&quot;background-color: #D9D9D6;&quot; class=&quot;p-1&quot;&gt;
        &lt;b&gt;&lt;i&gt;As a user, I&apos;d like to create an account. In order for me to be able to check out faster the next time.&lt;/i&gt;&lt;/b&gt;
    &lt;/p&gt;
    &lt;p&gt;
        Now comes the big question: is it really necessary for the user to check more quickly? Irrational user stories should be avoided. You might even lose interest in your effort now that they don&apos;t need to check it right away. If they do this, the user story above might make sense:
    &lt;/p&gt;
    &lt;p style=&quot;background-color: #D9D9D6;&quot; class=&quot;p-1&quot;&gt;
        &lt;b&gt;&lt;i&gt;[1] As a business, [2] I&apos;d like to create an account. [3] In order for me to learn more about my customers, and because customers with accounts are more likely to return to the app, according to research.&lt;/i&gt;&lt;/b&gt;
    &lt;/p&gt;
    &lt;p&gt;
        Unreasonable user stories often occur in number 3. This line is difficult to write because the content still needs quite a bit of explanation. Number 2 depends on your team&apos;s discussion. The phraseÂ &lt;i&gt;As a user&lt;/i&gt;Â is one of the indicators of irrational user stories. The first line above can not be applied to another user because users&apos;s needs are different. It&apos;s critical to know the difference between them when designing a user-friendly product. It&apos;s also a good idea to create a &lt;a href=&quot;https://en.wikipedia.org/wiki/Persona_(user_experience)&quot; target=&quot;_blank&quot;&gt;persona&lt;/a&gt; for them so that you can give them a sense of identity. It can also be difficult to write a user story because it covers such a broad range of technology.
    &lt;/p&gt;
    &lt;p&gt;
       However, you can turn these user stories into tasks &lt;a href=&quot;https://en.wikipedia.org/wiki/User_story#Relationship_to_epics,_themes_and_initiatives&quot; target=&quot;_blank&quot;&gt;(see more)&lt;/a&gt;, which are user stories but are broken up into smaller tasks. Epics might look something like this if you&apos;re making a personal management software: 
    &lt;/p&gt;
    &lt;p style=&quot;background-color: #D9D9D6;&quot; class=&quot;p-1&quot;&gt;
        &lt;b&gt;&lt;i&gt;As a customer, I&apos;d like to manage my activity. In order for me to be fully productive.&lt;/i&gt;&lt;/b&gt;
    &lt;/p&gt;
    &lt;p&gt;
        It can be broken down into small user stories based on various customer activities. Prioritizing these individual user stories is simple. Prioritizing large user stories will be difficult and will cause problems for your team. Because there are unnecessary tasks that arise as a result of a system&apos;s unnecessary features.   
    &lt;/p&gt;
    &lt;p&gt;
        &lt;a href=&quot;https://xp123.com/articles/invest-in-good-stories-and-smart-tasks/&quot; target=&quot;_blank&quot;&gt;Bill Wake&lt;/a&gt; suggests a mnemonic to help you remember the key elements of a user story. This is referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/INVEST_(mnemonic)&quot; target=&quot;_blank&quot;&gt;INVEST&lt;/a&gt;:
    &lt;/p&gt;
    &lt;p&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;b&gt;I&lt;/b&gt;ndependent&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;N&lt;/b&gt;egotiable&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;V&lt;/b&gt;aluable&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;E&lt;/b&gt;stimatable&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;S&lt;/b&gt;mall&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;T&lt;/b&gt;estable&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/p&gt;
    &lt;p style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;&quot;&gt;The user story must be &lt;i&gt;independent&lt;/i&gt; and not reliant on other user stories ThisÂ meansÂ youÂ canÂ moveÂ itÂ upÂ orÂ downÂ inÂ yourÂ &lt;a href=&quot;https://www.scrum.org/resources/what-is-a-product-backlog&quot; target=&quot;_blank&quot;&gt;backlog&lt;/a&gt;Â atÂ anyÂ time.Â TheÂ userÂ story mustÂ be alsoÂ &lt;i&gt;negotiable&lt;/i&gt;. ThisÂ meansÂ thatÂ theÂ user&apos;sÂ storyÂ canÂ beÂ changedÂ orÂ abandonedÂ atÂ anyÂ time.IfÂ yourÂ userÂ storyÂ hasÂ aÂ technical issue yourÂ teamÂ canÂ eitherÂ findÂ anotherÂ userÂ storyÂ orÂ discardÂ itÂ entirely.Â ToÂ makeÂ sense,Â yourÂ userÂ storyÂ mustÂ alsoÂ beÂ &lt;i&gt;valuable&lt;/i&gt; .AÂ userÂ storyÂ thatÂ keepsÂ youÂ busyÂ butÂ addsÂ littleÂ valueÂ toÂ yourÂ teamÂ shouldÂ beÂ removed.
    &lt;/p&gt;
    &lt;p style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;&quot;&gt;SomeÂ teamsÂ assignÂ aÂ pointÂ valueÂ toÂ aÂ backlog item,Â whichÂ aidsÂ usÂ inÂ prioritizingÂ thoseÂ items.Â TheÂ low-costÂ itemÂ hasÂ aÂ highÂ priority,Â whileÂ theÂ high-costÂ itemÂ hasÂ aÂ lowÂ priority.Â ThisÂ meansÂ thatÂ theÂ userÂ storyÂ isÂ alsoÂ &lt;i&gt;estimatable&lt;/i&gt;Â forÂ thisÂ reason.Â It&apos;sÂ difficultÂ toÂ prioritizeÂ aÂ userÂ storyÂ ifÂ youÂ don&apos;tÂ estimateÂ it.Â IfÂ thisÂ isn&apos;tÂ accuratelyÂ estimated,Â there&apos;sÂ aÂ problemÂ withÂ theÂ meaningÂ ofÂ aÂ userÂ story.Â ThisÂ meansÂ thatÂ ifÂ aÂ userÂ story&apos;sÂ meaning isÂ incorrect,Â itÂ canÂ notÂ beÂ implemented.
    &lt;/p&gt;
    &lt;p&gt;
      &lt;i&gt;Small&lt;/i&gt; is another feature of a good user story. However, it is contingent on your team&apos;s rules. Other teams are competing in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_Sprint&quot; target=&quot;_blank&quot;&gt;sprint&lt;/a&gt;, so the user story must be small for them to move easily. There are other teams that run in the same sprint as well, and it&apos;s fine with them if the user story is large as long as they&apos;re comfortable with it. The big user story is easy to overlook, resulting in wasted time and effort. The user story is also &lt;i&gt;testable&lt;/i&gt;, and that is the final INVEST requirement. There is no other way for the team to know if the user story is properly placed in the backlog if it is not testable. When a requirement is not testable, it may lack meaning, and this lack of meaning leads to a user story that can not be assigned value points.
    &lt;/p&gt;
    &lt;p style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;&quot;&gt;
      TheseÂ INVESTÂ requirementsÂ alsoÂ contradictÂ oneÂ another.Â IfÂ youÂ wantÂ aÂ userÂ storyÂ toÂ beÂ independent,Â forÂ example,Â youÂ canÂ enlargeÂ it,Â orÂ makeÂ itÂ smaller.Â However,Â accordingÂ toÂ INVEST,Â theÂ userÂ storyÂ shouldÂ beÂ small Â WhenÂ you&apos;reÂ layingÂ theÂ groundworkÂ forÂ aÂ system,Â it&apos;sÂ hugeÂ atÂ first.Â WhenÂ aÂ userÂ storyÂ isÂ large Â theÂ technicalÂ tasksÂ areÂ usuallyÂ largeÂ asÂ well YouÂ canÂ alsoÂ checkÂ theÂ costÂ estimateÂ toÂ seeÂ ifÂ theÂ bigÂ userÂ storyÂ isÂ affordable.Â YouÂ canÂ makeÂ aÂ &lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_viable_product&quot; target=&quot;_blank&quot;&gt;MinimumÂ ViableÂ Product&lt;/a&gt;Â ifÂ theÂ costÂ isÂ low,Â butÂ MVPÂ hasÂ lowÂ value.Â However Â theÂ MVPÂ mayÂ beÂ requiredÂ toÂ becomeÂ &lt;a href=&quot;https://en.wikipedia.org/wiki/Business_as_usual_(business)&quot; target=&quot;_blank&quot;&gt;BusinessÂ AsÂ Usual&lt;/a&gt;Â orÂ BAUÂ onÂ occasion.
    &lt;/p&gt;
    &lt;p&gt;
      When a user story is brand new, it frequently fails to meet INVEST&apos;s requirements. As a result, the new user story can be added to the planning process&apos;s idea section (&lt;a href=&quot;https://en.wikipedia.org/wiki/Kanban_board#/media/File:Sample_Kanban_Board.png&quot; target=&quot;_blank&quot;&gt;see more&lt;/a&gt;). Before adding a new user story to the backlog, the team checks to see if it has value or is estimatable. And when a new user story has already fulfilled the INVEST requirement. You must decide what steps you will take. Each team has its own way of defining a user story. Another group requires a lengthy definition of a user story. Others, on the other hand, simply want to be brief. It&apos;s difficult to find the right determinant level. When you have too much, your efforts may be wasted, and when you don&apos;t have enough, you may make mistakes.
    &lt;/p&gt;
    &lt;p style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;&quot;&gt;
      AsÂ theÂ projectÂ movesÂ fromÂ theÂ conceptÂ stageÂ toÂ theÂ productionÂ stage,Â you&apos;llÂ needÂ aÂ higherÂ levelÂ ofÂ detail.Â ThisÂ meansÂ thatÂ thereÂ areÂ otherÂ stagesÂ beforeÂ theÂ developmentÂ stage,Â suchÂ as the informationÂ architectureÂ stage.Â AtÂ eachÂ stage,Â youÂ mustÂ haveÂ goodÂ communicationÂ skills.Â IfÂ thereÂ isÂ aÂ technicalÂ issue,Â aÂ seniorÂ developerÂ mayÂ beÂ ableÂ toÂ assist.
    &lt;/p&gt;
    &lt;p&gt;
      The &lt;a href=&quot;https://en.wikipedia.org/wiki/User_story#Acceptance_criteria&quot; target=&quot;_blank&quot;&gt;acceptance criteria&lt;/a&gt; are the most common level of determination you&apos;ll need as a developer. &lt;a href=&quot;https://en.wikipedia.org/wiki/Behavior-driven_development&quot; target=&quot;_blank&quot;&gt;Behavior-driven development&lt;/a&gt; is one method that works well in this situation. Where you&apos;ll talk about establishing acceptance criteria. Written communication is less effective than verbal communication. It&apos;s crucial to ask and answer questions within your team if you want to make a good decision. In addition, some teams prefer verbal communication to written communication.
    &lt;/p&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
    &lt;hr /&gt;
    &lt;p&gt;
      A user story should be removed if it keeps you busy but adds little value to your team. The user story must stand alone and not be dependent on other user stories. If you don&apos;t estimate a user story, it&apos;s difficult to prioritize it. The user story, according to INVEST, should be brief. It&apos;s easy to overlook the big user story, resulting in wasted time and effort. The user story is negotiable and can be changed or abandoned at any time. If a technical issue arises with your user story, your team can either find another one or discard it entirely. At any point in time, a good user story can be moved up or down in your backlog. You must prefer verbal communication to written communication if you are working in team.
    &lt;/p&gt;
  &lt;/div&gt;

&lt;hr /&gt;

&lt;div class=&quot;desktop__size &quot;&gt;
  &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/03/31/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &amp;nbsp;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/03/31/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">You&apos;ll need to decide what you&apos;re going to make once you&apos;ve decided what product you need to make. What exactly is it? You must decide what you will do because this will serve as a means of communication with your team, allowing you to fully comprehend</summary></entry><entry><title type="html">The Basics of Software Requirement Gathering</title><link href="http://localhost:3000/2021/03/29/blog/" rel="alternate" type="text/html" title="The Basics of Software Requirement Gathering" /><published>2021-03-29T00:00:00+08:00</published><updated>2021-03-29T00:00:00+08:00</updated><id>http://localhost:3000/2021/03/29/blog</id><content type="html" xml:base="http://localhost:3000/2021/03/29/blog/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021-3-29-blog-cover.png&quot; class=&quot;rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;desktop__size &quot; style=&quot;text-align: center;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;The Basics of Software Requirement Gathering&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;mobile__size &quot; style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
    &lt;h2&gt;The Basics of Software Requirement Gathering&lt;/h2&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;div class=&quot;desktop__size &quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;small class=&quot;text-muted&quot;&gt;
          &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
        &lt;/small&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        By Edison Pebojot
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        29 March 2021
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;
        &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
      &lt;/div&gt;
      &amp;nbsp;
      &lt;div class=&quot;align-self-center&quot;&gt;
        &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/workpebojot&quot; data-color-scheme=&quot;no-preference: light; light: light; dark: light;&quot; data-size=&quot;large&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;small class=&quot;text-muted&quot;&gt;
                &lt;img src=&quot;/assets/images/2x2.webp&quot; width=&quot;30&quot; height=&quot;30&quot; class=&quot;img-fluid rounded-circle&quot; alt=&quot;Edison Pebojot&quot; /&gt;
            &lt;/small&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            By Edison Pebojot
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center flex-grow-1&quot;&gt;
            03/29/2021
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/workpebojot?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-follow-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot;&gt;Follow @workpebojot&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a class=&quot;github-button align-self-center&quot; href=&quot;https://github.com/workpebojot&quot; aria-label=&quot;Follow @workpebojot on GitHub&quot;&gt;Follow&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;word-break: keep-all;font-family:sans-serif;&quot;&gt;
&lt;p&gt;
  Each team&apos;s developer&apos;s role in gathering software requirements will be different. Someone is in charge of it in large groups. The &lt;i&gt;business analyst&lt;/i&gt;, &lt;i&gt;product owner&lt;/i&gt;, or &lt;i&gt;project manager&lt;/i&gt; is this person. It is essential that you put it on. However, you must collaborate with them in order to fully comprehend what they are doing. It&apos;s just a lot easier to work with if you understand what they&apos;re doing, as well as what your entire team is doing.
&lt;/p&gt;
&lt;p&gt;
  This is critical, particularly for senior developers. Many people expect senior developers to attend meetings with &lt;a href=&quot;https://en.wikipedia.org/wiki/Project_stakeholder&quot; target=&quot;_blank&quot;&gt;stakeholders&lt;/a&gt; to figure out what they need and what product they need to meet that need. Stakeholder needs were posted on a whiteboard, like sticky notes, and tasks were set up for a developer to complete, which was done by just one person. However, in the twenty-first century, it is no longer done by a single person.
&lt;/p&gt;
&lt;p&gt;
  This is why teams in the software industry hold &lt;a href=&quot;https://en.wikipedia.org/wiki/Workshop&quot; target=&quot;_blank&quot;&gt;workshops&lt;/a&gt;. Trainings and prototypes are displayed to the stakeholders in the workshop. These are the people who might be interested in your product, or stakeholders. If your prototype is about XBOX gaming software, your stakeholders may be XBOX gamers; if the prototype is about business management, your stakeholders may be a business team. Your supplier, and, more importantly, your end-user, can do it as well. This is done in order for the team to obtain useful information from stakeholders.
&lt;/p&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
&lt;p&gt;
  The order in which your workshops are held is determined by the stakeholders involved. Instead of doing that solution and making a prototype right away, this is typically how you look at your problem and how you can solve it. You could argue that it is anti-&lt;a href=&quot;https://en.wikipedia.org/wiki/Agile_software_development&quot; target=&quot;_blank&quot;&gt;agile&lt;/a&gt;, but you know that in order to avoid making a mistake, you must first see and understand the problem. Your stakeholder can tell you about a problem in a workshop, which will help you figure out what your challenges are and what steps you and your team should take. This step is part of a larger process known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Design#Process&quot; target=&quot;_blank&quot;&gt;design process&lt;/a&gt; in software development. However, we will use a double diamond process (or model) in this article.
&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&quot;https://user-images.githubusercontent.com/38276345/112810401-8f215380-90ad-11eb-8f10-1f746f5070fb.png&quot; class=&quot;img-fluid&quot; /&gt;
  &lt;figcaption&gt;Figure 1. Double Diamond Model (&lt;a href=&quot;https://en.wikipedia.org/wiki/File:Double_diamond.png&quot; target=&quot;_blank&quot;&gt;source&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/p&gt;
&lt;p&gt;
  You&apos;ll find a lot of problems in the double diamond model, as well as the most important ones. Then you&apos;ll come across a plethora of options before deciding on the most appropriate one. The stakeholder may understand the nature of their problem, but not the technology that will assist them in resolving it. Here, the double diamond workshops are beneficial because they not only provide us with the problem and solution, but they also know, as do we, which technology should be used.
&lt;/p&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
&lt;p&gt;
  The &lt;a href=&quot;https://en.wikipedia.org/wiki/User_experience&quot; target=&quot;_blank&quot;&gt;User Experience&lt;/a&gt; is the other. The User Experience team conducts a requirement gathering process with users. A sort of laboratory where User Experience researchers collect data on the subject. And mostÂ ofÂ theseÂ researchersÂ areÂ psychologists. In the requirement gathering process, the User Experience practitioner is your best ally. A User Experience team is found in many successful businesses. These successful companies combine the Development and User Experience teams into a single process, allowing them to work together to gather user data. The UX team assists the development team, or the development team assists the UX team, removing the communication barrier that existed in early software development.
&lt;/p&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
&lt;p&gt;
This type of requirement gathering is &lt;a href=&quot;https://en.wikipedia.org/wiki/Qualitative_research&quot; target=&quot;_blank&quot;&gt;qualitative research&lt;/a&gt;, which means they take abstract (theoretical) data, which usually includes user emotions. But, in addition to qualitative research, there is also &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantitative_research&quot; target=&quot;_blank&quot;&gt;quantitative research&lt;/a&gt;. Quantitative research is only useful if the user is already familiar with your product, and this familiarity will help the stakeholder understand how effective it is. It&apos;s very easy to get quantitative data using your &lt;a href=&quot;https://en.wikipedia.org/wiki/Analytics&quot; target=&quot;_blank&quot;&gt;analytics&lt;/a&gt; systems if you have a real user on your product. You can also use &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_delivery&quot; target=&quot;_blank&quot;&gt;continuous delivery&lt;/a&gt; with this quantitative data to release a new feature early.
&lt;/p&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align: left;font-family:sans-serif;&quot;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div style=&quot;text-align: justify;word-break: break-all;font-family:sans-serif;word-spacing: 0px;&quot;&gt;
&lt;p&gt;
  Many people expect senior developers to attend meetings with stakeholders to figure out what they require. The stakeholder needs were written on a whiteboard at the time. However, in the twenty-first century, it is no longer done by a single person. Your stakeholder can tell you a problem in a workshop, which will help you figure out what your challenges are. This is done in order for the team to obtain useful information from stakeholders.
&lt;/p&gt;
&lt;p&gt;
  Instead of doing that solution and making a prototype right away, you have to see the problem and understand it completely before coming up with a solution. You will find a lot of problems in the double diamonds model, and you will find the most important problems. Then you&apos;ll discover a plethora of options, including the most pressing one. The order in which your workshops are held is determined by the stakeholders involved.
&lt;/p&gt;
&lt;p&gt;
  The User Experience team conducts a requirement gathering process with users. Many successful businesses combine their development and user experience teams into one process. Quantitative research is only useful if your product is already in use by the user. It&apos;s very easy to get quantitative data using your analytics systems if you have a real user on your product. You can also use continuous delivery with this quantitative data to release a new feature early. In the requirement gathering process, the User Experience practitioner is your best ally.
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;div class=&quot;desktop__size &quot;&gt;
  &lt;div class=&quot;d-flex align-items-center&quot;&gt;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/03/29/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;large&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
    &lt;/div&gt;
    &amp;nbsp;
    &lt;div class=&quot;align-self-center&quot;&gt;
      &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button&quot; data-size=&quot;large&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;
      &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;mobile__size&quot;&gt;
    &lt;div class=&quot;d-flex align-items-center justify-content-start&quot;&gt;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;a href=&quot;https://twitter.com/share?ref_src=twsrc%5Etfw&quot; class=&quot;twitter-share-button align-self-center&quot; data-show-screen-name=&quot;false&quot; data-show-count=&quot;false&quot; data-via=&quot;workpebojot&quot;&gt;Tweet&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        &lt;/div&gt;
        &amp;nbsp;
        &lt;div class=&quot;align-self-center&quot;&gt;
            &lt;div class=&quot;fb-share-button align-self-center&quot; style=&quot;vertical-align: super;top:-2px&quot; data-href=&quot;https://www.pebojot.com/2021/03/29/blog/&quot; data-layout=&quot;button&quot; data-size=&quot;small&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;amp;src=sdkpreparse&quot; class=&quot;fb-xfbml-parse-ignore&quot;&gt;Share&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Pebojot</name></author><summary type="html">The role of the developer in software requirement gathering will vary with each team. Large teams put someone in charge of it. This is the business analyst, the product owner, or the project manager.</summary></entry></feed>